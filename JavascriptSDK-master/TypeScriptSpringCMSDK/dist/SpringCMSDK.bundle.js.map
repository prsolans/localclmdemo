{"version":3,"sources":["webpack://SpringSDK/webpack/bootstrap","webpack://SpringSDK/./wwwroot/SDK/Authentication/StaticTokenAuthentication.ts","webpack://SpringSDK/./wwwroot/SDK/Requests/DocumentRequest.ts","webpack://SpringSDK/./wwwroot/SDK/Requests/FolderRequest.ts","webpack://SpringSDK/./wwwroot/SDK/Service/BrowserHttpRequest.ts","webpack://SpringSDK/./wwwroot/SDK/Service/BrowserRequestFactory.ts","webpack://SpringSDK/./wwwroot/SDK/Service/BrowserSpringCMService.ts","webpack://SpringSDK/./wwwroot/SDK/Service/SpringCMService.ts","webpack://SpringSDK/./wwwroot/SDK/Service/validator.ts"],"names":[],"mappings":"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","file":"SpringCMSDK.bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","import { IAuthenticator } from \"./IAuthentication\";\r\n\r\nexport class StaticTokenAuthenication implements IAuthenticator {\r\n\r\n\r\n    constructor(token:string) {\r\n        this._token = token;\r\n    }\r\n\r\n    private _token: string;\r\n    AccessToken(): Promise<string> {\r\n        var p = new Promise<string>((res, rej) => { res(this._token); })\r\n\r\n        return p;\r\n\r\n    }\r\n    TokenExpiration: Date;\r\n    LastTokenRequest: Date;\r\n\r\n\r\n\r\n\r\n}","import { SpringCMServiceBase } from \"../Service/SpringCMService\";\r\nimport { Document } from \"../Model/Document\";\r\n\r\nexport class DocumentRequest {\r\n\r\n    private _id: string;\r\n\r\n    private _path: string;\r\n\r\n    private _scmsvc: SpringCMServiceBase;\r\n\r\n    private _document: Document;\r\n\r\n    private _expandAttributeGroups: boolean;\r\n\r\n\r\n    //public get Document(): Document {\r\n    //    if ((this._document == null)) {\r\n    //        //this.Result();\r\n    //    }\r\n\r\n    //    return this._document;\r\n    //}\r\n\r\n    set ExpandAttributeGroups(value: boolean) {\r\n        if ((this._expandAttributeGroups != value)) {\r\n            this._id = this._scmsvc.getIDfromHref(this._document.Href);\r\n            this._document = undefined;\r\n            this._expandAttributeGroups = value;\r\n        }\r\n    }\r\n    get ExpandAttributeGroups(): boolean {\r\n\r\n        return this._expandAttributeGroups;\r\n    }\r\n\r\n    public constructor(svc: SpringCMServiceBase,documentId: string,documentPath:string, document:Document) {\r\n        this._id = documentId;\r\n        this._scmsvc = svc;\r\n        this._document = document;\r\n        this._path = documentPath;\r\n\r\n        //this.svc.Datacenter = datacenter;\r\n        //this.svc.GetObjectAPIUrl = `https://api${this.svc.Datacenter}.springcm.com/${this.ApplicationVersion}`;\r\n        //this.svc.GetUploadAPIUrl = `https://apiupload${this.svc.Datacenter}.springcm.com/${this.ApplicationVersion}`;\r\n        //this.svc.GetDownloadAPIUrl = `https://apidownload${this.Datacenter}.springcm.com/${this.ApplicationVersion}`;\r\n    }\r\n\r\n    public get Document(): Promise<Document> {\r\n        var p = new Promise<Document>((res, rej) => {\r\n            if ((this._document != undefined)) {\r\n                this._id = this._scmsvc.getIDfromHref(this._document.Href);\r\n                res(this._document);\r\n                //return;\r\n            }\r\n            if (this._path != undefined) {\r\n                this._scmsvc.Requestor.Get<Document>(`${this._scmsvc.GetObjectAPIUrl}/documents?path=${encodeURI(this._path)}&${this.ExpandDocument()}`).then((doc) => {\r\n                    this._document = doc;\r\n                    this._id = this._scmsvc.getIDfromHref(this._document.Href);\r\n                    res(this._document);\r\n                });\r\n                //return _folder;\r\n            }\r\n            if ((this._id != undefined)) {\r\n                this._scmsvc.Requestor.Get<Document>(`${this._scmsvc.GetObjectAPIUrl}/documents/${this._id}?${this.ExpandDocument()}`).then((fol) => {\r\n\r\n                    this._document = fol;\r\n                    //this.id = this._scmsvc.getIDfromHref(this._folder.Href);\r\n                    res(this._document);\r\n                })\r\n\r\n            }\r\n\r\n\r\n        });\r\n\r\n        return p;\r\n    }\r\n\r\n    private ExpandDocument(): String {\r\n        let expandString: Array<String> = [];\r\n        //if (this._expandParentFolder == true) {\r\n        //    expandString.push(\"ParentFolder\");\r\n        //}\r\n\r\n        //if (this._expandDocuments == true) {\r\n        //    expandString.push(\"Documents\");\r\n        //}\r\n\r\n        //if (this._expandFolders == true) {\r\n        //    expandString.push(\"Folders\");\r\n        //}\r\n\r\n        //if (this._expandPath) {\r\n        //    expandString.push(\"Path\");\r\n        //}\r\n\r\n        //if (this._expandEosParentInfo) {\r\n        //    expandString.push(\"EosParentInfo\");\r\n        //}\r\n\r\n        //if (this._expandEosInfo) {\r\n        //    expandString.push(\"Eosinfo\");\r\n        //}\r\n\r\n        //if (this._expandShareLinks) {\r\n        //    expandString.push(\"ShareLinks\");\r\n        //}\r\n\r\n        if (this._expandAttributeGroups == true) {\r\n            expandString.push(\"AttributeGroups\");\r\n        }\r\n\r\n        //if (this._expandSecurity) {\r\n        //    expandString.push(\"Security\");\r\n        //}\r\n\r\n        //if ((expandString.length == 0)) {\r\n        //    return \"\";\r\n        //}\r\n\r\n        return `expand=${expandString.join(',')}`;\r\n\r\n    }\r\n\r\n    public DownloadDocumentById(id: string, page?: string, headers?: string): Promise<Blob> {\r\n\r\n        //var h = { \"Accept\": \"image/png\"};\r\n\r\n\r\n        var p = new Promise<Blob>((res, rej) => {\r\n            if (page != undefined) {\r\n                this._scmsvc.Requestor.GetStream<Blob>(`${this._scmsvc.GetDownloadAPIUrl}/documents/${id}?page=${page}`).then(root => {\r\n                    res(root);\r\n                }).catch(rej);\r\n            } else {\r\n                this._scmsvc.Requestor.GetStream<Blob>(`${this._scmsvc.GetDownloadAPIUrl}/documents/${id}`).then(root => {\r\n                    res(root);\r\n                }).catch(rej);\r\n            }\r\n        })\r\n        return p;\r\n    }\r\n\r\n    public getID(): string {\r\n        return this._id;\r\n    }\r\n\r\n   \r\n    //public Result(): Document {\r\n    //    if ((this._document != null)) {\r\n    //        return this._document;\r\n    //    }\r\n\r\n    //    if (this._path == undefined) {\r\n    //        this._document = this._scmsvc.requestor.Get<Document>(\"{_scmsvc.GetObjectAPIUrl}/documents?path={System.Web.HttpUtility.UrlEncode(_path)}\", new Dictionary<string, string>());\r\n    //    }\r\n\r\n    //    if ((this._id != null)) {\r\n    //        this._document = this._scmsvc.requestor.Get<Document>(\"{_scmsvc.GetObjectAPIUrl}/documents/{_id}\", new Dictionary<string, string>());\r\n    //    }\r\n\r\n    //    return this._document;\r\n    //}\r\n}","import { SpringCMServiceBase } from \"../Service/SpringCMService\";\r\nimport { Folder } from \"../Model/Folder\";\r\nimport { SpringCMItem } from \"../Model/SpringCMItem\";\r\n\r\nexport class FolderRequest {\r\n\r\n    private _id: string;\r\n\r\n    private _path: string;\r\n\r\n    private _scmsvc: SpringCMServiceBase;\r\n\r\n    private _folder: Folder;\r\n\r\n    private _expandParentFolder: boolean;\r\n\r\n    private _expandDocuments: boolean;\r\n\r\n    private _expandFolders: boolean;\r\n\r\n    private _expandPath: boolean;\r\n\r\n    private _expandEosParentInfo: boolean;\r\n\r\n    private _expandEosInfo: boolean;\r\n\r\n    private _expandShareLinks: boolean;\r\n\r\n    private _expandAttributeGroups: boolean;\r\n\r\n    private _expandSecurity: boolean;\r\n\r\n\r\n\r\n    set ExpandDocuments(value: boolean) {\r\n        if ((this._expandDocuments != value)) {\r\n            this._id = this._scmsvc.getIDfromHref(this._folder.Href);\r\n            this._folder = undefined;\r\n            this._expandDocuments = value;\r\n        }\r\n    }\r\n    get ExpandDocuments(): boolean {\r\n\r\n        return this._expandDocuments;\r\n    }\r\n\r\n    set ExpandFolders(value: boolean) {\r\n        if ((this._expandFolders != value)) {\r\n            this._id = this._scmsvc.getIDfromHref(this._folder.Href);\r\n            this._folder = undefined;\r\n            this._expandFolders = value;\r\n        }\r\n    }\r\n    get ExpandFolders(): boolean {\r\n\r\n        return this._expandFolders\r\n    }\r\n    set ExpandPath(value: boolean) {\r\n        if ((this._expandPath != value)) {\r\n            this._folder = undefined;\r\n        }\r\n    }\r\n    get ExpandPath(): boolean {\r\n\r\n        return this._expandPath;\r\n    }\r\n    set ExpandEosParentInfo(value: boolean) {\r\n        if ((this._expandEosParentInfo != value)) {\r\n            this._folder = undefined;\r\n        }\r\n    }\r\n    get ExpandEosParentInfo(): boolean {\r\n\r\n        return this._expandEosParentInfo;\r\n    }\r\n    set ExpandEosInfo(value: boolean) {\r\n        if ((this._expandEosInfo != value)) {\r\n            this._folder = undefined;\r\n        }\r\n    }\r\n    get ExpandEosInfo(): boolean {\r\n\r\n        return this._expandEosInfo;\r\n    }\r\n    set ExpandShareLinks(value: boolean) {\r\n        if ((this._expandShareLinks != value)) {\r\n            this._folder = undefined;\r\n        }\r\n    }\r\n    get ExpandShareLinks(): boolean {\r\n\r\n        return this._expandShareLinks;\r\n    }\r\n    set ExpandAttributeGroups(value: boolean) {\r\n        if ((this._expandAttributeGroups != value)) {\r\n            this._id = this._scmsvc.getIDfromHref(this._folder.Href);\r\n            this._folder = undefined;\r\n            this._expandAttributeGroups = value;\r\n        }\r\n    }\r\n    get ExpandAttributeGroups(): boolean {\r\n\r\n        return this._expandAttributeGroups;\r\n    }\r\n    set ExpandSecurity(value: boolean) {\r\n        if ((this._expandSecurity != value)) {\r\n            this._folder = undefined;\r\n        }\r\n    }\r\n    get ExpandSecurity(): boolean {\r\n\r\n        return this._expandSecurity;\r\n    }\r\n    constructor(svc: SpringCMServiceBase, folderId: string, path: string, folder: Folder) {\r\n        this._id = folderId;\r\n        this._scmsvc = svc;\r\n        this._folder = folder;\r\n        this._path = path;\r\n    }\r\n\r\n    public get Folder(): Promise<Folder> {\r\n        var p = new Promise<Folder>((res, rej) => {\r\n            if ((this._folder != undefined)) {\r\n                this._id = this._scmsvc.getIDfromHref(this._folder.Href);\r\n                res(this._folder);\r\n                //return;\r\n            }\r\n            if (this._path != undefined) {\r\n                this._scmsvc.Requestor.Get<Folder>(`${this._scmsvc.GetObjectAPIUrl}/folders?path=${encodeURI(this._path)}&${this.ExpandFolder()}`).then((fol) => {\r\n                    this._folder = fol;\r\n                    this._id = this._scmsvc.getIDfromHref(this._folder.Href);\r\n                    res(this._folder);\r\n                });\r\n                //return _folder;\r\n            }\r\n            if ((this._id != undefined)) {\r\n                this._scmsvc.Requestor.Get<Folder>(`${this._scmsvc.GetObjectAPIUrl}/folders/${this._id}?${this.ExpandFolder()}`).then((fol) => {\r\n\r\n                    this._folder = fol;\r\n                    //this.id = this._scmsvc.getIDfromHref(this._folder.Href);\r\n                    res(this._folder);\r\n                })\r\n\r\n            }\r\n\r\n\r\n        });\r\n\r\n\r\n\r\n        return p;\r\n    }\r\n\r\n    //public GetAllSubfolders(): Promise<Array<FolderRequest>> {\r\n\r\n    //    var p = new Promise<Array<FolderRequest>>((res, rej) => {\r\n\r\n    //        this.Folder.then((folder) => {\r\n    //            let res = this._scmsvc.Requestor.Get<SpringCMItem<Folder>>(`${folder.Href}/folders?limit=${this._scmsvc.DefaultQueryBatch}`).then((folders) => {\r\n\r\n    //                var frs:Array<FolderRequest> = [];\r\n    //                for (var i = 0; i < folders.Items.length;i++) {\r\n    //                    frs.push(new FolderRequest(this._scmsvc, undefined, undefined, folders.Items[i]));\r\n    //                }\r\n\r\n    //                if ((folders.Items.length < folders.Total)) {\r\n    //                    while ((folders.Next != undefined)) {\r\n    //                        folders = this._scmsvc.Requestor.Get<SpringCMItem<Folder>>(`${folders.Next}`);\r\n    //                        lst.AddRange(res.Items.Select(() => { }, new FolderRequest(a, _scmsvc)));\r\n    //                    }\r\n\r\n    //                }\r\n\r\n    //                return lst;\r\n\r\n    //            })\r\n\r\n\r\n\r\n    //        })\r\n\r\n\r\n    //    })\r\n\r\n    //}\r\n\r\n    //public UploadDocument(file: System.IO.Stream, FileName: string): Task < DocumentRequest > {\r\n    //                                    return this._scmsvc.UploadDocument(this.Folder, file, FileName);\r\n    //                                }\r\n\r\n    //public Delete(): Task < Folder > {\r\n    //                                    return this._scmsvc.DeleteFolder(this.Folder);\r\n    //                                }\r\n\r\n    //public CreateSubfolder(name: string): Task < FolderRequest > {\r\n    //                                    let fol = [][\r\n    //                                        Name = name,\r\n    //                                        ParentFolder = this.Folder];\r\n    //                                    return _scmsvc.CreateFolder(fol);\r\n    //                                }\r\n\r\n    //public GetAllDocuments(): Task < List < DocumentRequest >> {\r\n    //                                    let res = ((this._scmsvc.requestor.Get\r\n    //                                        < (SpringCMItem < Document))\r\n    //                                        + \"{Folder.Href}/documents?limit={_scmsvc.DefaultQueryBatch}&{ExpandFolder()}\");\r\n    //                                    let lst = res.Items.Select(() => { }, new DocumentRequest(a, _scmsvc)).ToList();\r\n    //                                    if((res.Items.Count < res.Total)) {\r\n    //                                    while ((res.Next != null)) {\r\n    //                                        res = ((this._scmsvc.requestor.Get\r\n    //                                            < (SpringCMItem < Document))\r\n    //                                            + \"{res.Next}\");\r\n    //                                        lst.AddRange(res.Items.Select(() => { }, new DocumentRequest(a, _scmsvc)));\r\n    //                                    }\r\n\r\n    //                                }\r\n\r\n    //                                return lst;\r\n    //                            }\r\n\r\n    private ExpandFolder(): String {\r\n        let expandString: Array<String> = [];\r\n        if (this._expandParentFolder == true) {\r\n            expandString.push(\"ParentFolder\");\r\n        }\r\n\r\n        if (this._expandDocuments == true) {\r\n            expandString.push(\"Documents\");\r\n        }\r\n\r\n        if (this._expandFolders == true) {\r\n            expandString.push(\"Folders\");\r\n        }\r\n\r\n        if (this._expandPath) {\r\n            expandString.push(\"Path\");\r\n        }\r\n\r\n        if (this._expandEosParentInfo) {\r\n            expandString.push(\"EosParentInfo\");\r\n        }\r\n\r\n        if (this._expandEosInfo) {\r\n            expandString.push(\"Eosinfo\");\r\n        }\r\n\r\n        if (this._expandShareLinks) {\r\n            expandString.push(\"ShareLinks\");\r\n        }\r\n\r\n        if (this._expandAttributeGroups == true) {\r\n            expandString.push(\"AttributeGroups\");\r\n        }\r\n\r\n        if (this._expandSecurity) {\r\n            expandString.push(\"Security\");\r\n        }\r\n\r\n        if ((expandString.length == 0)) {\r\n            return \"\";\r\n        }\r\n\r\n        return `expand=${expandString.join(',')}`;\r\n\r\n    }\r\n}","import { IHttpRequestor } from \"./IHttpRequest\";\r\nimport { IAuthenticator } from \"../Authentication/IAuthentication\";\r\n\r\n\r\n\r\nexport class BrowserHttpRequest implements IHttpRequestor {\r\n\r\n    constructor(auth: IAuthenticator) {\r\n        this.Authenticator = auth;\r\n    }\r\n    public Authenticator: IAuthenticator;\r\n\r\n\r\n\r\n    public Put<T>(url: string, body: any, headers?: any): Promise<T> {\r\n\r\n\r\n\r\n        return new Promise<T>((res, rej) => {\r\n            this.getHeader(headers).then((populatedHeaders) => {\r\n                $.ajax(url, { method: \"PUT\", data: JSON.stringify(body), headers: populatedHeaders }).done(data => { res(data); }).fail(rej);\r\n               \r\n            }, rej)\r\n\r\n            \r\n        });\r\n    }\r\n    \r\n\r\n    \r\n    public  Post<T>(url: string, body: any, headers: any): Promise<T>  {\r\n\r\n        return new Promise<T>((res, rej) => {\r\n            this.getHeader(headers).then((populatedHeaders) => {\r\n                $.ajax(url, { method: \"POST\", data: JSON.stringify( body), headers: populatedHeaders }).done(data => { res(data); }).fail(rej);\r\n\r\n            }, rej)\r\n\r\n\r\n        });\r\n    }\r\n\r\n    public Get= <T>(url: string, headers: any = undefined): Promise<T> => {\r\n        return new Promise<T>((res, rej) => {\r\n            this.getHeader(headers).then((populatedHeaders) => {\r\n                $.ajax(url, { method: \"GET\", data: undefined, headers: populatedHeaders }).done(data => {  res(data); }).fail(rej);\r\n\r\n            }, rej)\r\n\r\n\r\n        });\r\n    }\r\n    public Delete = <T>(url: string, headers: any = undefined): Promise<T> => {\r\n        return new Promise<T>((res, rej) => {\r\n            this.getHeader(headers).then((populatedHeaders) => {\r\n                $.ajax(url, { method: \"DELETE\", data: undefined, headers: populatedHeaders }).done(data => { res(data); }).fail(rej);\r\n\r\n            }, rej)\r\n\r\n\r\n        });\r\n    }\r\n    public Patch = <T>(url: string, body: any, headers: any = undefined): Promise<T> => {\r\n        return new Promise<T>((res, rej) => {\r\n            this.getHeader(headers).then((populatedHeaders) => {\r\n                $.ajax(url, { method: \"PATCH\",data: JSON.stringify(body), headers: populatedHeaders }).done(data => { res(data); }).fail(rej);\r\n\r\n            }, rej)\r\n\r\n\r\n        });\r\n    }\r\n    public MakeCall = <T>(url: string, body: any, headers: any, method: string): Promise<T>=> {\r\n        return new Promise<T>((res, rej) => {\r\n            this.getHeader(headers).then((populatedHeaders) => {\r\n                $.ajax(url, { method: method, data: JSON.stringify(body), headers: populatedHeaders }).done(data => { res(data); }).fail(rej);\r\n\r\n            }, rej)\r\n\r\n\r\n        });\r\n    };\r\n\r\n    public GetStream = <T>(url: string, headers: any = undefined): Promise<T> => {\r\n        return new Promise<T>((res, rej) => {\r\n            this.getAuthHeader(headers).then((authBearer) => {\r\n                console.log(\"authBearer | \" + authBearer);\r\n                var req = new XMLHttpRequest();\r\n                req.open(\"GET\", url, true);\r\n                req.responseType = \"arraybuffer\";\r\n                req.setRequestHeader(\"Accept\", \"image/png\");\r\n                req.setRequestHeader(\"Authorization\", authBearer);\r\n                req.onload = function (event) {\r\n                    var responseText = req.response;\r\n                    console.log(responseText.size);\r\n                    res(responseText);\r\n                };\r\n                req.send();\r\n            }, rej)\r\n        });\r\n    }\r\n\r\n    public getHeader = (currentHeader: any): Promise<any> => {\r\n\r\n        if (currentHeader == undefined) {\r\n            currentHeader = [];\r\n        }\r\n\r\n        if (currentHeader[\"accept\"] == undefined) {\r\n            currentHeader[\"accept\"] = \"application/json\";\r\n        }\r\n        if (currentHeader[\"Content-Type\"] == undefined) {\r\n            currentHeader[\"Content-Type\"] = \"application/json\";\r\n        }\r\n        //console.log(currentHeader);\r\n        var p = new Promise<any[]>((res, rej) => {\r\n\r\n            if (currentHeader[\"Authorization\"] == undefined) {\r\n                // console.log(\"Authorization is not already set\");\r\n                this.Authenticator.AccessToken().then((token) => {\r\n\r\n                    currentHeader[\"Authorization\"] = `bearer ${token}`;\r\n                    res(currentHeader);\r\n                }, rej);\r\n            }\r\n            else {\r\n                //  console.log(\"Authorization is already set\");\r\n                res(currentHeader);\r\n            }\r\n        })\r\n        return p;\r\n\r\n    }\r\n\r\n    public getAuthHeader = (authToken: any): Promise<any> => {\r\n\r\n        var p = new Promise<any[]>((res, rej) => {\r\n            this.Authenticator.AccessToken().then((token) => {\r\n\r\n                authToken = `bearer ${token}`;\r\n                res(authToken);\r\n            }, rej);\r\n\r\n        })\r\n        return p;\r\n\r\n    }\r\n}","import { IHttpRequestor } from \"./IHttpRequest\";\r\nimport { BrowserHttpRequest } from \"./BrowserHttpRequest\";\r\n//import { EformHttpRequest } from \"./EformHttpRequest\";\r\n//import { NodeHttpRequest } from \"./NodeHttpRequest\";\r\nimport { IAuthenticator } from \"../Authentication/IAuthentication\";\r\ndeclare var SpringCM: any;\r\nexport class RequestorFactory {\r\n    \r\n    public static GetRequestor = (auth: IAuthenticator): IHttpRequestor => {\r\n        if (typeof window === 'undefined') {\r\n            \r\n           // return new NodeHttpRequest(auth);\r\n\r\n        }\r\n        else {\r\n          //  if (SpringCM.API != undefined) {\r\n                \r\n                //return new EformHttpRequest();\r\n           // }\r\n           // else {\r\n               return new BrowserHttpRequest(auth);\r\n            //}\r\n\r\n           // return null;\r\n\r\n        }\r\n    }\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n","import { SpringCMServiceBase } from \"./SpringCMService\";\r\nimport { RequestorFactory } from \"./BrowserRequestFactory\";\r\nimport { IAuthenticator } from \"../Authentication/IAuthentication\";\r\nexport { StaticTokenAuthenication } from '../Authentication/StaticTokenAuthentication'\r\nexport { FolderRequest } from '../Requests/FolderRequest';\r\nexport { DocumentRequest } from '../Requests/DocumentRequest';\r\nexport class SpringCMService extends SpringCMServiceBase {\r\n\r\n\r\n    public constructor(auth: IAuthenticator, datacenter: string) {\r\n        super(auth, datacenter);\r\n        this.Requestor = RequestorFactory.GetRequestor(auth);\r\n        \r\n    }\r\n}","import { IAuthenticator } from \"../Authentication/IAuthentication\";\r\n\r\nimport { IHttpRequestor } from \"./IHttpRequest\";\r\nimport { Account } from \"../Model/Account\";\r\nimport { SpringCMItem } from \"../Model/SpringCMItem\";\r\nimport { AttributeGroups } from \"../Model/AttributeGroup\";\r\nimport { DocLauncher } from \"../Model/DocLauncher\";\r\nimport { PermissionSet } from \"../Model/PermissionSet\";\r\nimport { DocLauncherTask } from \"../Model/DocLauncherTask\";\r\nimport { Contacts } from \"../Model/Contacts\";\r\nimport { Workflow } from \"../Model/Workflow\";\r\nimport { WorkflowQueue } from \"../Model/WorkflowQueue\";\r\nimport { WorkItem } from \"../Model/WorkItem\";\r\nimport { Validator } from \"./validator\";\r\nimport { StaticTokenAuthenication } from \"../Authentication/StaticTokenAuthentication\";\r\nimport { APIUserAuthenticator } from \"../Authentication/APIUserAuthentication\";\r\nimport { FolderRequest } from \"../Requests/FolderRequest\";\r\nimport { Folder } from \"../Model/Folder\";\r\nimport { DocumentReminder } from \"../Model/DocumentReminder\";\r\nimport { ShareLink } from \"../Model/shareLink\";\r\nimport { Group } from \"../Model/Group\";\r\nimport { DocumentMergeTask } from \"../Model/DocumentMergeTask\";\r\nimport { CopyTask } from \"../Model/CopyTask\";\r\nimport { FolderSearchTask } from \"../Model/FolderSearchTask\";\r\nimport { FolderArchiveTask } from \"../Model/FolderArchiveTask\";\r\nimport { User } from \"../Model/User\";\r\nimport { SplitDocumentTask } from \"../Model/SplitDocumentTask\";\r\nimport { SignatureTask } from \"../Model/SignatureTask\";\r\nimport { ExternalReviewTask } from \"../Model/ExternalReviewTask\";\r\nimport { DocumentProcessTrackingActivity } from \"../Model/DocumentProcessTrackingActivity\";\r\nimport { DocumentRequest } from \"../Requests/DocumentRequest\";\r\nimport { Lock } from \"../Model/Lock\";\r\nimport { EosInfo } from \"../Model/EosInfo\";\r\nimport { Document } from \"../Model/Document\";\r\n\r\n\r\n\r\nexport class SpringCMServiceBase {\r\n\r\n    public DefaultQueryBatch: number;\r\n\r\n    public constructor(auth: IAuthenticator, datacenter: string) {\r\n        this.Datacenter = datacenter;\r\n        this.GetObjectAPIUrl = `https://api${this.Datacenter}.springcm.com/${this.ApplicationVersion}`;\r\n        this.GetUploadAPIUrl = `https://apiupload${this.Datacenter}.springcm.com/${this.ApplicationVersion}`;\r\n        this.GetDownloadAPIUrl = `https://apidownload${this.Datacenter}.springcm.com/${this.ApplicationVersion}`;\r\n    }\r\n\r\n    public ApplicationVersion: string = \"v201411\";\r\n\r\n    private Datacenter: string\r\n\r\n\r\n    public GetObjectAPIUrl: string;\r\n\r\n    public GetUploadAPIUrl: string;\r\n\r\n    public GetDownloadAPIUrl: string;\r\n\r\n    public Requestor: IHttpRequestor\r\n\r\n    public GetCurrentAccount(): Promise<Account> {\r\n        return this.Requestor.Get<Account>(`${this.GetObjectAPIUrl}/accounts/current`);\r\n    }\r\n\r\n    public UpdateAccount(act: Account): Promise<Account> {\r\n        return this.Requestor.Patch<Account>(act.Href, act);\r\n    }\r\n\r\n    public GetCurrentAccountAttributeGroups(): Promise<SpringCMItem<AttributeGroups>> {\r\n        return this.Requestor.Get<SpringCMItem<AttributeGroups>>(`${this.GetObjectAPIUrl}/accounts/current/attributegroups`);\r\n\r\n    }\r\n\r\n    //public QueryNext(springCMItem: SpringCMItem<T>): Promise<SpringCMItem<T>> {\r\n    //    return this.Requestor.Get<SpringCMItem<T>>(`${this.springCMItem.Next}`);\r\n    //}\r\n\r\n    public GetAllDocLauncherConfigs(): Promise<SpringCMItem<DocLauncher>> {\r\n        return this.Requestor.Get<SpringCMItem<DocLauncher>>(`${this.GetObjectAPIUrl}/doclauncherconfigurations`);\r\n    }\r\n\r\n    public GetAllPermissionSets(): Promise<SpringCMItem<PermissionSet>> {\r\n        return this.Requestor.Get<SpringCMItem<PermissionSet>>(`${this.GetObjectAPIUrl}/permissionsets`);\r\n    }\r\n\r\n    public GetDocLauncherTask(IdorHref: string): Promise<DocLauncherTask> {\r\n        let href = IdorHref;\r\n        if (Validator.isUUID(IdorHref)) {\r\n            href = `${this.GetObjectAPIUrl}/doclauncherTasks/${IdorHref}`;\r\n        }\r\n\r\n        return this.Requestor.Get<DocLauncherTask>(href);\r\n    }\r\n\r\n    public CreateDocLauncherTask(DocLauncherTask: DocLauncherTask): Promise<DocLauncherTask> {\r\n        return this.Requestor.Post<DocLauncherTask>(`${this.GetObjectAPIUrl}/DocLauncherTasks`, DocLauncherTask);\r\n    }\r\n\r\n    public GetAllContacts(): Promise<SpringCMItem<Contacts>> {\r\n        return this.Requestor.Get<SpringCMItem<Contacts>>(`${this.GetObjectAPIUrl}/contacts`);\r\n    }\r\n\r\n    public GetContactById(Id: string): Promise<Contacts> {\r\n        return this.Requestor.Get<Contacts>(`${this.GetObjectAPIUrl}/contacts/{Id}`);\r\n    }\r\n\r\n    public CreateContact(contact: Contacts): Promise<Contacts> {\r\n        return this.Requestor.Post<Contacts>(`${this.GetObjectAPIUrl}/contacts/`, contact);\r\n    }\r\n\r\n    public UpdateContact(contact: Contacts): Promise<Contacts> {\r\n        return this.Requestor.Put<Contacts>(contact.Href, contact);\r\n    }\r\n\r\n    public DeleteContact(contact: Contacts): Promise<Contacts> {\r\n        return this.Requestor.Delete<Contacts>(contact.Href);\r\n    }\r\n\r\n    public GetWorkflow(IdorHref: string): Promise<Workflow> {\r\n        let href = IdorHref;\r\n        if (Validator.isUUID(IdorHref)) {\r\n            href = `${this.GetObjectAPIUrl}/workflows/${IdorHref}`;\r\n        }\r\n\r\n        return this.Requestor.Get<Workflow>(href);\r\n    }\r\n\r\n    public StartWorkflow(workflow: Workflow): Promise<Workflow> {\r\n        return this.Requestor.Post<Workflow>(`${this.GetObjectAPIUrl}/workflows/`, (workflow));\r\n    }\r\n\r\n    public SignalWorkflow(workflow: Workflow, data: string): Promise<Workflow> {\r\n        return this.Requestor.Post<Workflow>(`${workflow.Href}/signal`, `{\"data\":\"${data}\" }`);\r\n    }\r\n\r\n    public DeleteWorkflow(workflow: Workflow): Promise<Workflow> {\r\n        return this.Requestor.Delete<Workflow>(workflow.Href);\r\n    }\r\n\r\n    public GetWorkflowQueue(IdorHref: string): Promise<SpringCMItem<WorkflowQueue>> {\r\n        //         let id: Guid;\r\n        let href = IdorHref;\r\n        if (Validator.isUUID(IdorHref)) {\r\n            href = `${this.GetObjectAPIUrl}/workflowqueues/${IdorHref}`;\r\n        }\r\n\r\n        return;\r\n    }\r\n\r\n    public GetWorkflowQueueWorkItems(IdorHref: string): Promise<SpringCMItem<WorkItem>> {\r\n        //         let id: Guid;\r\n        let href = IdorHref;\r\n        if (Validator.isUUID(IdorHref)) {\r\n            href = `${this.GetObjectAPIUrl}/workflowqueues/${IdorHref}/workitems`;\r\n        }\r\n\r\n        return;\r\n    }\r\n\r\n    public GetWorkItem(IdorHref: string, assignee: boolean = false, documents: boolean = false, assigneeInstructions: boolean = false, workflow: boolean = false, selections: boolean = false): Promise<WorkItem> {\r\n        //        let id: Guid;\r\n        let href = IdorHref;\r\n        if (Validator.isUUID(IdorHref)) {\r\n            href = `${this.GetObjectAPIUrl}/workitems/${IdorHref}`;\r\n        }\r\n\r\n        let expandString: Array<String> = [];\r\n        if (assignee) {\r\n            expandString.push(\"Assignee\");\r\n        }\r\n\r\n        if (documents) {\r\n            expandString.push(\"Documents\");\r\n        }\r\n\r\n        if (assigneeInstructions) {\r\n            expandString.push(\"AssigneeInstructions\");\r\n        }\r\n\r\n        if (workflow) {\r\n            expandString.push(\"Workflow\");\r\n        }\r\n\r\n        if (selections) {\r\n            expandString.push(\"Selections\");\r\n        }\r\n\r\n        if ((expandString.length == 0)) {\r\n            return this.Requestor.Get<WorkItem>(href);\r\n        }\r\n        let expand = `expand=${expandString.join(',')}`;\r\n        return this.Requestor.Get<WorkItem>(`${href}?expand=${expand}`);\r\n\r\n    };\r\n\r\n    //        ///  <summary>\r\n    //        ///  Method accepts an ID or an HREF\r\n    //        ///  Brings back documents assigned to a user via SpringCM Promise\r\n    //        ///  </summary>\r\n    //        ///  <param name=\"IdorHref\"></param>\r\n    //        ///  <returns>Returns a list of documents associated to the Promises assigned to a user</returns>\r\n    public GetWorkItemDocuments(IdorHref: string): Promise<SpringCMItem<Document>> {\r\n        //\t\t\tlet id: Guid;\r\n        let href = IdorHref;\r\n        if (Validator.isUUID(IdorHref)) {\r\n            href = `${this.GetObjectAPIUrl}/workitems/{IdorHref}/documents`;\r\n        }\r\n\r\n        return this.Requestor.Get<SpringCMItem<Document>>(href);\r\n    }\r\n\r\n    //        ///  <summary>\r\n    //        ///   Method accepts an ID or an HREF\r\n    //        ///   Currently this method does not work but may in the future.\r\n    //        ///  </summary>\r\n    //        ///  <param name=\"workitem\"></param>\r\n    //        ///  <param name=\"IdorHref\"></param>\r\n    //        ///  <returns></returns>\r\n    public UpdateWorkitem(workitem: WorkItem, IdorHref: string): Promise<WorkItem> {\r\n        //\t\t\tlet id: Guid;\r\n        let href = IdorHref;\r\n        if (Validator.isUUID(IdorHref)) {\r\n            href = `${this.GetObjectAPIUrl}/workitems/{IdorHref}`;\r\n        }\r\n\r\n        return this.Requestor.Patch<WorkItem>(\"{href}\", (workitem));\r\n    }\r\n\r\n    public GetDocumentReminder(IdorHref: string): Promise<DocumentReminder> {\r\n        //\t\t\tlet id: Guid;\r\n        let href = IdorHref;\r\n        if (Validator.isUUID(IdorHref)) {\r\n            href = `${this.GetObjectAPIUrl}/DocumentReminders/{id}`;\r\n        }\r\n\r\n        return this.Requestor.Get<DocumentReminder>((href + \"?expand=Documents,RecipientUsers,RecipientGroups\"));\r\n    }\r\n\r\n    public CreateDocumentReminder(documentReminder: DocumentReminder): Promise<DocumentReminder> {\r\n        return this.Requestor.Post<DocumentReminder>(`${this.GetObjectAPIUrl}/DocumentReminders/`, (documentReminder));\r\n    }\r\n\r\n    public UpdateDocumentReminder(documentReminder: DocumentReminder): Promise<DocumentReminder> {\r\n        return this.Requestor.Put<DocumentReminder>(documentReminder.Href, (documentReminder));\r\n    }\r\n\r\n    public DeleteDocumentReminder(documentReminder: DocumentReminder): Promise<DocumentReminder> {\r\n        return this.Requestor.Delete<DocumentReminder>(documentReminder.Href);\r\n    }\r\n\r\n    //        public GetGroup(IdorHref: string, loadGroupMembers: boolean = false): Promise<Group> {\r\n    //    let id: Guid;\r\n    //    let href = IdorHref;\r\n    //    let expand = \"\";\r\n    //    if(loadGroupMembers) {\r\n    //        expand = \"?expand=GroupMembers\";\r\n    //    }\r\n\r\n    //            if(Guid.TryParse(IdorHref, /* out */id)) {\r\n    //    href = \"{GetObjectAPIUrl}/Groups/{IdorHref}{expand}\";\r\n    //}\r\n\r\n    //return this.Requestor.Get<Group>(href);\r\n    //        }\r\n\r\n    public GetGroupMembers(IdorHref: string): Promise<SpringCMItem<User>> {\r\n        //\t\t\tlet id: Guid;\r\n        let href = IdorHref;\r\n        if (Validator.isUUID(IdorHref)) {\r\n            href = `${this.GetObjectAPIUrl}/Groups/{IdorHref}`;\r\n        }\r\n\r\n        return this.Requestor.Get<SpringCMItem<User>>(\"{href}/groupmembers\");\r\n    }\r\n\r\n    public CreateGroup(group: Group): Promise<Group> {\r\n        return this.Requestor.Post<Group>(`${this.GetObjectAPIUrl}/groups/`, (group));\r\n    }\r\n\r\n    public UpdateGroup(group: Group, overwriteMembers: boolean = false): Promise<Group> {\r\n        if (overwriteMembers) {\r\n            return this.Requestor.Put<Group>(\"{group.Href}\", (group));\r\n        }\r\n\r\n        return this.Requestor.Patch<Group>(\"{group.Href}\", (group));\r\n    }\r\n\r\n    public DeleteGroup(group: Group): Promise<Group> {\r\n        return this.Requestor.Delete<Group>(group.Href);\r\n    }\r\n\r\n    //public GetCurrentUser(): Promise<UserRequest> {\r\n    //    return new UserRequest(this.Requestor.Get<User>(`${this.GetObjectAPIUrl}/Users/Current`), this);\r\n    //}\r\n\r\n    //public GetAllUsers(): Promise<List<UserRequest>> {\r\n    //    let users = this.Requestor.Get<List<User>>(`${this.GetObjectAPIUrl}/Users/`);\r\n    //    return users.Select(() => { }, new UserRequest(a, this)).ToList();\r\n    //}\r\n\r\n    //public CreateUser(user: UserRequest): Promise<UserRequest> {\r\n    //    return this.CreateUser(user.User);\r\n    //}\r\n\r\n    //public CreateUser(user: User): Promise<UserRequest> {\r\n    //    return new UserRequest(this.Requestor.Post<User>(`${this.GetObjectAPIUrl}/users/`, (user)), this);\r\n    //}\r\n\r\n    //public DeleteUser(user: UserRequest): Promise<User> {\r\n    //    return this.DeleteUser(user.User);\r\n    //}\r\n\r\n    //public DeleteUser(user: User): Promise<User> {\r\n    //    return this.Requestor.Delete<User>(user.Href);\r\n    //}\r\n\r\n    //public GetUser(IdorHref: string): Promise<UserRequest> {\r\n    //    //\t\t\tlet id: Guid;\r\n    //    let href = IdorHref;\r\n    //    if (Validator.isUUID(IdorHref)) {\r\n    //        href = `${this.GetObjectAPIUrl}/users/{IdorHref}`;\r\n    //    }\r\n\r\n    //    return new UserRequest(this.Requestor.Get<User>(href), this);\r\n    //}\r\n\r\n    //public UpdateUser(user: UserRequest, overwriteGroups: boolean = false): Promise<UserRequest> {\r\n    //    return this.UpdateUser(user.User, overwriteGroups);\r\n    //}\r\n\r\n    //public UpdateUser(user: User, overwriteGroups: boolean = false): Promise<UserRequest> {\r\n    //    if (overwriteGroups) {\r\n    //        return new UserRequest(this.Requestor.Put<User>(\"{user.Href}\", (user)), this);\r\n    //    }\r\n\r\n    //    return new UserRequest(this.Requestor.Patch<User>(\"{user.Href}\", (user)), this);\r\n    //}\r\n\r\n    public GetCurrentUsersWatchedDocuments(): Promise<SpringCMItem<Document>> {\r\n        return this.Requestor.Get<SpringCMItem<Document>>(`${this.GetObjectAPIUrl}/users/current/watcheddocuments`);\r\n    }\r\n\r\n    public GetCurrentUsersWatchedDocumentsProcessTractingActivites(): Promise<SpringCMItem<DocumentProcessTrackingActivity>> {\r\n        return this.Requestor.Get<SpringCMItem<DocumentProcessTrackingActivity>>(`${this.GetObjectAPIUrl}/users/current/watcheddocumentsprocesstrackingactivities`);\r\n    }\r\n\r\n\r\n    public GetCurrentUsersWorkItems(IdorHref: string): Promise<SpringCMItem<WorkItem>> {\r\n        //\t\t\tlet id: Guid;\r\n        let href = IdorHref;\r\n        if (Validator.isUUID(IdorHref)) {\r\n            href = `${this.GetObjectAPIUrl}/users/{IdorHref}/workitems`;\r\n        }\r\n\r\n        return this.Requestor.Get<SpringCMItem<WorkItem>>(href);\r\n    }\r\n\r\n    //public UploadDocument(folder: Folder, file: Stream, fileName: string): Promise<DocumentRequest> {\r\n    //    return new DocumentRequest(this.Requestor.PostFile(`${this.GetUploadAPIUrl}/folders/{getIDfromHref(folder.Href)}/documents`, file, fileName), this);\r\n    //}\r\n\r\n    //public MakeSafeFolderName(folderName: string): string {\r\n    //    // return folderName.replace(/[.\\?]/g,'')\r\n    //    // return folderName.replace(/.|\\|?/g,'')\r\n    //    return folderName.replace(\".\", \"_\").replace(\"\\\", \"_\").replace(\" / \", \"_\").replace(\": \", \"_\").replace(\" * \", \"_\").replace(\" ? \", \"_\").replace(\"\"\"\"\", \", _, (\").replace(\" < \", \"), _, (\").replace(\" > \", \"), _, \"\".replace(\" | \", \"_\"));\r\n    //        }\r\n\r\n    //public MakeSafePathName(folderName: string): string {\r\n    //    return folderName.replace(\".\", \"_\").replace(\":\", \"_\").replace(\"*\", \"_\").replace(\"?\", \"_\").replace(\"\"\"\"\", \", _, (\").replace(\" < \", \"), _, (\").replace(\" > \", \"), _, \"\".replace(\"|\", \"_\"));\r\n    //}\r\n\r\n    //public CheckInDocument(id: string, file: Stream, fileName: string): Promise<DocumentRequest> {\r\n    //    return new DocumentRequest(this.Requestor.PostFile(`${this.GetUploadAPIUrl}/documents/{id}`, file, fileName), this);\r\n    //}\r\n\r\n    //        public FindOrCreateFolder(path: string): Promise<FolderRequest> {\r\n    //    try {\r\n    //        let fldrreq = this.GetFolderByPath(this.MakeSafePathName(path));\r\n    //        let fldr = fldrreq.Folder;\r\n    //        return fldrreq;\r\n    //    }\r\n    //            catch(ag /*:AggregateException*/) {\r\n    //        let ae = (<ApiException>(ag.InnerExceptions.First()));\r\n    //        if ((ae != null)) {\r\n    //            if ((ae.ApiError.Error.HttpStatusCode == 404)) {\r\n    //                return this.findOrCreateInParent(this.GetRootFolder(), path);\r\n    //            }\r\n    //            else {\r\n    //                throw ae;\r\n    //            }\r\n\r\n    //        }\r\n    //        else {\r\n    //            throw ag;\r\n    //        }\r\n\r\n    //    }\r\n\r\n    //            return new FolderRequest(\"123\", this);\r\n    //}\r\n\r\n    //        private findOrCreateInParent(parent: FolderRequest, folderPath: string): Promise<FolderRequest> {\r\n    //    let paths = folderPath.Replace(\"\\\", \" / \").Trim('/').Split('/').ToList();\r\n    //            let folder = parent.GetAllSubfolders().FirstOrDefault(() => { }, (a.Folder.Name.ToLower() == paths[0].ToLower()));\r\n    //    if((folder == null)) {\r\n    //    folder = parent.CreateSubfolder(this.MakeSafeFolderName(paths[0]));\r\n    //}\r\n\r\n    //paths.RemoveAt(0);\r\n    //if ((paths.Count > 0)) {\r\n    //    folder = this.findOrCreateInParent(folder, this.MakeSafePathName(string.Join(\"/\", paths)));\r\n    //}\r\n\r\n    //return folder;\r\n    //        }\r\n\r\n    public CheckOutDocument(id: string): Promise<Lock> {\r\n        return this.Requestor.Post(`${this.GetObjectAPIUrl}/documents/{id}/lock`, \"\");\r\n    }\r\n\r\n    //public MoveDocument(doc: Document, parentFolder: Folder): Promise<DocumentRequest> {\r\n    //    doc.ParentFolder = parentFolder;\r\n    //    return this.UpdateDocument(doc);\r\n    //}\r\n\r\n    public CancelCheckOutDocument(id: string): Promise<Lock> {\r\n        return this.Requestor.Delete(`${this.GetObjectAPIUrl}/documents/{id}/lock`);\r\n    }\r\n\r\n    //        public QueryAll(springCMItem: SpringCMItem<T>): Promise<List< T >> {\r\n    //    let lst: List<T> = new List<T>();\r\n    //    let nextRes: SpringCMItem<T> = new SpringCMItem<T>();\r\n    //    lst.AddRange(springCMItem.Items);\r\n    //    lst.AddRange(nextRes.Items);\r\n    //    while((nextRes.Next != null)) {\r\n    //    nextRes = ((this.requestor.Get\r\n    //        < (SpringCMItem < T))\r\n    //        + \"{nextRes.Next}\");\r\n    //    lst.AddRange(nextRes.Items);\r\n    //}\r\n\r\n    //return lst;\r\n    //        }\r\n\r\n    public GetAttributeGroupFields(idOrHref: string): Promise<AttributeGroups> {\r\n        return this.Requestor.Get<AttributeGroups>(`${this.GetObjectAPIUrl}/attributegroups/${idOrHref}`);\r\n    }\r\n\r\n    //return this.Requestor.Get<AttributeGroups>(idOrHref);\r\n    //        }\r\n\r\n    public getIDfromHref(href: string): string {\r\n        let last = (href.lastIndexOf('/') + 1);\r\n        let end = href.length;\r\n        let diff;\r\n        return href.substring(last, diff);\r\n    }\r\n\r\n    public GetRootFolder(): Promise<FolderRequest> {\r\n        var p = new Promise<FolderRequest>((res, rej) => {\r\n            this.Requestor.Get<Folder>(`${this.GetObjectAPIUrl}/folders?systemfolder=root`).then(root => {\r\n                res(new FolderRequest(this, undefined, undefined, root));\r\n            }).catch(rej);\r\n\r\n        })\r\n        return p;\r\n    }\r\n\r\n    //public GetUserHomeFolder(): Promise<FolderRequest> {\r\n    //    return new FolderRequest(this, \"\", \"\",this.Requestor.Get<Folder>(`${this.GetObjectAPIUrl}/folders?systemfolder=home`));\r\n    //}\r\n\r\n    //public GetEOSRootFolder(): Promise<FolderRequest> {\r\n    //    return new FolderRequest(this.Requestor.Get<Folder>(`${this.GetObjectAPIUrl}/folders?systemfolder=othersources`), this);\r\n    //}\r\n\r\n    //public GetTrashFolder(): Promise<FolderRequest> {\r\n    //    return new FolderRequest(this.Requestor.Get<Folder>(`${this.GetObjectAPIUrl}/folders?path=trash`), this);\r\n    //}\r\n\r\n    public GetFolderByPath(path: string): Promise<FolderRequest> {\r\n        //return new Promise<FolderRequest>(this, null, path, undefined);\r\n\r\n        var p = new Promise<FolderRequest>((res, rej) => {\r\n            this.Requestor.Get<Folder>(`${this.GetObjectAPIUrl}/folders?path=${path}`).then(root => {\r\n                res(new FolderRequest(this, undefined, undefined, root));\r\n            }).catch(rej);\r\n\r\n        })\r\n        return p;\r\n    }\r\n\r\n    public GetFolderById(id: string): Promise<FolderRequest> {\r\n        //return new Promise<FolderRequest>(this, null, path, undefined);\r\n\r\n        var p = new Promise<FolderRequest>((res, rej) => {\r\n            this.Requestor.Get<Folder>(`${this.GetObjectAPIUrl}/folders/${id}`).then(root => {\r\n                res(new FolderRequest(this, undefined, undefined, root));\r\n            }).catch(rej);\r\n\r\n        })\r\n        return p;\r\n    }\r\n\r\n    //public CreateFolder(folder: Folder): Promise<FolderRequest> {\r\n    //    return new FolderRequest(this.Requestor.Post<Folder>(`${this.GetObjectAPIUrl}/Folders`, (folder)), this);\r\n    //}\r\n\r\n    public CreateFolder(name: string, path: string): Promise<FolderRequest> {\r\n\r\n        var parentFolder;\r\n        let parent = this.GetFolderByPath(path).then(function (result) {\r\n            parentFolder = result.Folder;\r\n            result.ExpandFolders = true;\r\n        });\r\n        \r\n        const folder = <Folder>{\r\n            Name: name,\r\n            ParentFolder: parentFolder\r\n        };\r\n\r\n        //let folder = [][\r\n        //    Name = name,\r\n        //    ParentFolder = parent;//(await parent.Folder);\r\n\r\n        var p = new Promise<FolderRequest>((res, rej) => {\r\n            this.Requestor.Post<Folder>(`${this.GetObjectAPIUrl}/folders`, (folder)), this\r\n\r\n        });\r\n        return p;\r\n\r\n        //return new FolderRequest(this.Requestor.Post<Folder>(`${this.GetObjectAPIUrl}/Folders`, (folder)), this);\r\n    }\r\n\r\n    //public MoveFolder(folderToMove: Folder, destinationFolder: Folder): Promise<FolderRequest> {\r\n    //    folderToMove.ParentFolder = destinationFolder;\r\n    //    return this.UpdateFolder(folderToMove);\r\n    //}\r\n\r\n    //public UpdateFolder(folder: Folder, overwriteAllAttributes: boolean = false): Promise<FolderRequest> {\r\n    //    if (!overwriteAllAttributes) {\r\n    //        return new FolderRequest(this.Requestor.Patch<Folder>(folder.Href, (folder)), this);\r\n    //    }\r\n    //    else {\r\n    //        return new FolderRequest(this.Requestor.Put<Folder>(folder.Href, (folder)), this);\r\n    //    }\r\n\r\n    //}\r\n\r\n    public FindOrCreateEOSFolder(folderName: string, path: string, objectType: string, objectId: string): Promise<FolderRequest> {\r\n\r\n        const eos = <EosInfo>{\r\n            Name: folderName,\r\n            ObjectId: objectId,\r\n            ObjectType: objectType,\r\n            Path: path\r\n        }\r\n\r\n        const fld = <Folder>{\r\n            EosInfo: eos\r\n        };\r\n\r\n        var p = new Promise<FolderRequest>((res, rej) => {\r\n            this.Requestor.Post<Folder>(`${this.GetObjectAPIUrl}/folders`, (fld)).then(root => {\r\n                res(new FolderRequest(this, undefined, undefined, root));\r\n            }).catch(rej);\r\n\r\n        });\r\n        return p;\r\n\r\n        //var p = new Promise<FolderRequest>((res, rej) => {\r\n        //    this.Requestor.Get<Folder>(`${this.GetObjectAPIUrl}/folders?systemfolder=root`).then(root => {\r\n        //        res(new FolderRequest(this, undefined, undefined, root));\r\n        //    }).catch(rej);\r\n\r\n        //})\r\n        //return p;\r\n\r\n        //let fold = [][\r\n        //    EosInfo = new EosInfo{\r\n        //        Name = folderName, ObjectId = objectId, ObjectType = objectType, Path = pathUnknown];\r\n        //return this.CreateFolder(fld);\r\n    }\r\n\r\n    public DeleteFolder(folder: Folder): Promise<Folder> {\r\n        return this.Requestor.Delete<Folder>(folder.Href);\r\n    }\r\n\r\n    //public UpdateDocument(doc: DocumentRequest, overwriteAllValues: boolean = false): Promise<DocumentRequest> {\r\n\r\n    //    var id = doc.getID();\r\n\r\n    //    if (overwriteAllValues) {\r\n    //        var p = new Promise<DocumentRequest>((res, rej) => {\r\n    //            this.Requestor.Post<Document>(`${this.GetObjectAPIUrl}/documents/${id}`, doc).then(root => {\r\n    //                res(new DocumentRequest(this, undefined, undefined, root));\r\n    //            }).catch(rej);\r\n\r\n    //        });\r\n    //        return p;\r\n    //    }\r\n    //    else {\r\n    //        var p = new Promise<DocumentRequest>((res, rej) => {\r\n    //            this.Requestor.Patch<Document>(`${this.GetObjectAPIUrl}/documents/${id}`, doc).then(root => {\r\n    //                res(new DocumentRequest(this, undefined, undefined, root));\r\n    //            }).catch(rej);\r\n\r\n    //        });\r\n    //        return p;\r\n    //    }\r\n    //}\r\n\r\n    //        public DeleteDocument(doc: Document): Promise<Document> {\r\n    //    return this.Requestor.Delete<Document>(doc.Href);\r\n    //}\r\n\r\n    public UpdateDocument(doc: Document, overwriteAllValues: boolean = false): Promise<DocumentRequest> {\r\n\r\n        var id = this.getIDfromHref(doc.Href);\r\n\r\n        if (overwriteAllValues) {\r\n            var p = new Promise<DocumentRequest>((res, rej) => {\r\n                this.Requestor.Post<Document>(`${this.GetObjectAPIUrl}/documents/${id}`, doc).then(root => {\r\n                    res(new DocumentRequest(this, undefined, undefined, root));\r\n                }).catch(rej);\r\n\r\n            });\r\n            return p;\r\n\r\n        } else {\r\n            var p = new Promise<DocumentRequest>((res, rej) => {\r\n                this.Requestor.Patch<Document>(`${this.GetObjectAPIUrl}/documents/${id}`, doc).then(root => {\r\n                    res(new DocumentRequest(this, undefined, undefined, root));\r\n                }).catch(rej);\r\n\r\n            });\r\n            return p;\r\n        }\r\n\r\n\r\n    }\r\n\r\n    public GetDocumentById(id: string): Promise<DocumentRequest> {\r\n        var p = new Promise<DocumentRequest>((res, rej) => {\r\n            this.Requestor.Get<Document>(`${this.GetObjectAPIUrl}/documents/${id}`).then(root => {\r\n                res(new DocumentRequest(this, undefined, undefined, root));\r\n                    }).catch(rej);\r\n\r\n                });\r\n                return p;\r\n    }\r\n\r\n    //        public GetDocumentByPath(path: String): Promise<DocumentRequest> {\r\n    //    return new DocumentRequest(path, this);\r\n    //}\r\n\r\n    //        public Search(request: Search, LoadAttributes: boolean = false): Promise<Search> {\r\n    //    let expand: string = \"\";\r\n    //    if(LoadAttributes) {\r\n    //        expand = \"?expand=AttributeGroups\";\r\n    //    }\r\n\r\n    //            let requestString: string = (request);\r\n    //    return this.Requestor.Post<Search>(`${this.GetObjectAPIUrl}/documentsearchPromises{expand}`, requestString);\r\n    //}\r\n\r\n    public CreateShareLink(link: ShareLink): Promise<ShareLink> {\r\n        return this.Requestor.Post<ShareLink>(`${this.GetObjectAPIUrl}/sharelinks`, (link));\r\n    }\r\n\r\n    public UpdateShareLink(link: ShareLink): Promise<ShareLink> {\r\n        return this.Requestor.Put<ShareLink>(link.Href, (link));\r\n    }\r\n\r\n    public DeleteShareLink(link: ShareLink): Promise<ShareLink> {\r\n        return this.Requestor.Delete<ShareLink>(link.Href);\r\n    }\r\n\r\n    public GetShareLink(id: String): Promise<ShareLink> {\r\n        return this.Requestor.Get<ShareLink>(`${this.GetObjectAPIUrl}/sharelinks/{id}`);\r\n    }\r\n\r\n    public CreateDocumentMergeTask(documentMergeTask: DocumentMergeTask): Promise<DocumentMergeTask> {\r\n        return this.Requestor.Post<DocumentMergeTask>(`${this.GetObjectAPIUrl}/DocumentMergeTask`, (documentMergeTask));\r\n    }\r\n\r\n    public CreateCopyTask(copyTask: CopyTask): Promise<CopyTask> {\r\n        return this.Requestor.Post<CopyTask>(`${this.GetObjectAPIUrl}/CopyTask`, (copyTask));\r\n    }\r\n\r\n    public CreateFolderSearchTask(folderSearchTask: FolderSearchTask): Promise<FolderSearchTask> {\r\n        return this.Requestor.Post<FolderSearchTask>(`${this.GetObjectAPIUrl}/foldersearchTask`, (folderSearchTask));\r\n    }\r\n\r\n    public CreateFolderArchiveTask(folderArchiveTask: FolderArchiveTask): Promise<FolderArchiveTask> {\r\n        return this.Requestor.Post<FolderArchiveTask>(`${this.GetObjectAPIUrl}/folderarchiveTask`, (folderArchiveTask));\r\n    }\r\n\r\n    public CreateDocumentSplitTask(splitDocumentTask: SplitDocumentTask): Promise<SplitDocumentTask> {\r\n        return this.Requestor.Post<SplitDocumentTask>(`${this.GetObjectAPIUrl}/splitdocumentTask`, (splitDocumentTask));\r\n    }\r\n\r\n    public GetSignatureTask(IdorHref: string): Promise<SignatureTask> {\r\n        //\t\t\tlet id: Guid;\r\n        let href = IdorHref;\r\n        if (Validator.isUUID(IdorHref)) {\r\n            return this.Requestor.Get<SignatureTask>(`${this.GetObjectAPIUrl}/signatureTask/{IdorHref}`);\r\n        }\r\n\r\n        return this.Requestor.Get<SignatureTask>(href);\r\n    }\r\n\r\n    public CreateSignatureTask(signatureTask: SignatureTask): Promise<SignatureTask> {\r\n        return this.Requestor.Post<SignatureTask>(`${this.GetObjectAPIUrl}/signatureTask`, (signatureTask));\r\n    }\r\n\r\n    public DeleteSignatureTask(href: string): Promise<SignatureTask> {\r\n        return this.Requestor.Delete<SignatureTask>(href);\r\n    }\r\n\r\n    public GetExternalReviewTask(IdorHref: string): Promise<ExternalReviewTask> {\r\n        //\t\t\tlet id: Guid;\r\n        let href = IdorHref;\r\n        if (Validator.isUUID(IdorHref)) {\r\n            return this.Requestor.Get<ExternalReviewTask>(`${this.GetObjectAPIUrl}/externalreviewTask/{IdorHref}`);\r\n        }\r\n\r\n        return this.Requestor.Get<ExternalReviewTask>(href);\r\n    }\r\n\r\n    public CreateExternalReviewTask(externalReviewTask: ExternalReviewTask): Promise<ExternalReviewTask> {\r\n        return this.Requestor.Post<ExternalReviewTask>(`${this.GetObjectAPIUrl}/externalreviewTask`, (externalReviewTask));\r\n    }\r\n\r\n    public DeleteExternalReviewTask(IdorHref: string): Promise<ExternalReviewTask> {\r\n        //\t\t\tlet id: Guid;\r\n        let href = IdorHref;\r\n        if (Validator.isUUID(IdorHref)) {\r\n            return this.Requestor.Delete<ExternalReviewTask>(`${this.GetObjectAPIUrl}/externalreviewTask/{IdorHref}`);\r\n        }\r\n\r\n        return this.Requestor.Delete<ExternalReviewTask>(href);\r\n    }\r\n\r\n    public GetExternalReviewTaskDocuments(Id: string): Promise<ExternalReviewTask> {\r\n        return this.Requestor.Get<ExternalReviewTask>(`${this.GetObjectAPIUrl}/externalreviewTask/{Id}/documents`);\r\n    }\r\n}","export class Validator {\r\n\r\n\r\n\r\n\r\n\r\n\r\n    public static uuid = {\r\n        3: /^[0-9A-F]{8}-[0-9A-F]{4}-3[0-9A-F]{3}-[0-9A-F]{4}-[0-9A-F]{12}$/i,\r\n        4: /^[0-9A-F]{8}-[0-9A-F]{4}-4[0-9A-F]{3}-[89AB][0-9A-F]{3}-[0-9A-F]{12}$/i,\r\n        5: /^[0-9A-F]{8}-[0-9A-F]{4}-5[0-9A-F]{3}-[89AB][0-9A-F]{3}-[0-9A-F]{12}$/i,\r\n        all: /^[0-9A-F]{8}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{12}$/i\r\n    };\r\n    public static isUUID = (str): boolean => {\r\n        var version = 'all';\r\n        // this.assertString(str);\r\n        var pattern = Validator.uuid[version];\r\n        return pattern && pattern.test(str);\r\n    }\r\n\r\n    //    public  assertString =(input) => {\r\n    //        var isString = typeof input === 'string' || input instanceof String;\r\n\r\n    //        if (!isString) {\r\n    //            var invalidType;\r\n\r\n    //            if (input === null) {\r\n    //                invalidType = 'null';\r\n    //            } else {\r\n    //                invalidType = this._typeof(input);\r\n\r\n    //                if (invalidType === 'object' && input.constructor && input.constructor.hasOwnProperty('name')) {\r\n    //                    invalidType = input.constructor.name;\r\n    //                } else {\r\n    //                    invalidType = \"a \".concat(invalidType);\r\n    //                }\r\n    //            }\r\n\r\n    //            throw new TypeError(\"Expected string but received \".concat(invalidType, \".\"));\r\n    //        }\r\n    //    }\r\n\r\n    //    private  _typeof = (obj)=> {\r\n    //    if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\r\n    //        this._typeof = function (obj) {\r\n    //            return typeof obj;\r\n    //        };\r\n    //    } else {\r\n    //        this._typeof = function (obj) {\r\n    //            return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\r\n    //        };\r\n    //    }\r\n\r\n    //    return this._typeof(obj);\r\n    //}\r\n}"],"sourceRoot":""}